#!/usr/bin/env python
"""
–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ ZenzefiClient —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π:
- –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫
- –£–¥–∞–ª–µ–Ω–∏–µ __pycache__ –¥–ª—è —á–∏—Å—Ç–æ–π —Å–±–æ—Ä–∫–∏
- –ö–æ–º–ø–∏–ª—è—Ü–∏—è .pyc —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π —É—Ä–æ–≤–Ω—è 2
- –ó–∞–ø—É—Å–∫ PyInstaller —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
- –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤
"""

import os
import sys
import shutil
import subprocess
from pathlib import Path


def clean_build():
    """–û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫ –∏ –∫—ç—à–µ–π"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫...")

    dirs_to_remove = ['build', 'dist', '__pycache__']
    for dir_name in dirs_to_remove:
        if os.path.exists(dir_name):
            shutil.rmtree(dir_name)
            print(f"   –£–¥–∞–ª–µ–Ω–æ: {dir_name}/")

    # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —É–¥–∞–ª—è–µ–º __pycache__ –≤–æ –≤—Å–µ—Ö –ø–æ–¥–ø–∞–ø–∫–∞—Ö
    for root, dirs, files in os.walk('.'):
        if '__pycache__' in dirs:
            pycache_path = os.path.join(root, '__pycache__')
            shutil.rmtree(pycache_path)
            print(f"   –£–¥–∞–ª–µ–Ω–æ: {pycache_path}")

    print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n")


def optimize_bytecode():
    """–ö–æ–º–ø–∏–ª—è—Ü–∏—è Python —Ñ–∞–π–ª–æ–≤ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π —É—Ä–æ–≤–Ω—è 2"""
    print("‚ö° –ö–æ–º–ø–∏–ª—è—Ü–∏—è .pyc —Ñ–∞–π–ª–æ–≤ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π —É—Ä–æ–≤–Ω—è 2...")

    try:
        # -O -O = –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —É—Ä–æ–≤–Ω—è 2 (—É–¥–∞–ª–µ–Ω–∏–µ docstrings –∏ assert)
        subprocess.run([sys.executable, '-OO', '-m', 'compileall', '.'], check=True)
        print("‚úÖ –ë–∞–π—Ç–∫–æ–¥ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω\n")
    except subprocess.CalledProcessError as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –±–∞–π—Ç–∫–æ–¥–∞: {e}\n")


def build_exe():
    """–ó–∞–ø—É—Å–∫ PyInstaller —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏"""
    print("üî® –°–±–æ—Ä–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞...")

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º PyInstaller —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
        cmd = [
            'pyinstaller',
            '--clean',           # –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π
            '--noconfirm',       # –ù–µ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            '--log-level=WARN',  # –¢–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –æ—à–∏–±–∫–∏
            'ZenzefiClient.spec'
        ]

        subprocess.run(cmd, check=True)
        print("‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        return False


def get_size_mb(file_path):
    """–ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –ú–ë"""
    if os.path.exists(file_path):
        size_bytes = os.path.getsize(file_path)
        return size_bytes / (1024 * 1024)
    return 0


def print_statistics():
    """–í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤"""
    print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–±–æ—Ä–∫–∏:")
    print("=" * 50)

    exe_path = Path('dist') / 'ZenzefiClient.exe'

    if exe_path.exists():
        exe_size = get_size_mb(exe_path)
        print(f"üì¶ ZenzefiClient.exe: {exe_size:.2f} –ú–ë")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ dist/
        dist_path = Path('dist')
        total_size = 0
        file_count = 0

        for file in dist_path.rglob('*'):
            if file.is_file():
                total_size += file.stat().st_size
                file_count += 1

        total_size_mb = total_size / (1024 * 1024)
        print(f"üìÅ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ –≤ dist/: {file_count}")
        print(f"üíæ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {total_size_mb:.2f} –ú–ë")
        print("=" * 50)
        print(f"‚úÖ –°–±–æ—Ä–∫–∞ –≥–æ—Ç–æ–≤–∞: {exe_path}")
    else:
        print("‚ùå –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")

    print()


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏"""
    print("üöÄ –ù–∞—á–∞–ª–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–±–æ—Ä–∫–∏ ZenzefiClient\n")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è spec —Ñ–∞–π–ª–∞
    if not os.path.exists('ZenzefiClient.spec'):
        print("‚ùå –§–∞–π–ª ZenzefiClient.spec –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return 1

    # –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞
    clean_build()

    # –®–∞–≥ 2: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±–∞–π—Ç–∫–æ–¥–∞
    optimize_bytecode()

    # –®–∞–≥ 3: –°–±–æ—Ä–∫–∞
    if not build_exe():
        return 1

    # –®–∞–≥ 4: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print_statistics()

    print("üéâ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    return 0


if __name__ == '__main__':
    sys.exit(main())