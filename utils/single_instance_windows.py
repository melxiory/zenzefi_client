# utils/single_instance_windows.py
import logging
import sys
import os
from ctypes import wintypes, windll, byref

logger = logging.getLogger(__name__)


class SingleInstance:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Windows
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –º—å—é—Ç–µ–∫—Å—ã
    """

    def __init__(self, mutex_name="ZenzefiClient_SingleInstance_Mutex"):
        self.mutex_name = mutex_name
        self.mutex_handle = None
        self.locked = False

    def lock(self):
        """–ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –º—å—é—Ç–µ–∫—Å"""
        try:
            # –°–æ–∑–¥–∞–µ–º –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –º—å—é—Ç–µ–∫—Å
            self.mutex_handle = windll.kernel32.CreateMutexW(
                None,  # –ê—Ç—Ä–∏–±—É—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                wintypes.BOOL(False),  # –ù–µ –≤–ª–∞–¥–µ–µ–º –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ
                self.mutex_name  # –ò–º—è –º—å—é—Ç–µ–∫—Å–∞
            )

            if not self.mutex_handle:
                logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –º—å—é—Ç–µ–∫—Å")
                return False

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –º—å—é—Ç–µ–∫—Å
            last_error = windll.kernel32.GetLastError()

            if last_error == 183:  # ERROR_ALREADY_EXISTS
                logger.warning(f"‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ (–º—å—é—Ç–µ–∫—Å {self.mutex_name} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)")
                windll.kernel32.CloseHandle(self.mutex_handle)
                self.mutex_handle = None
                return False
            else:
                self.locked = True
                logger.info(f"‚úÖ –ú—å—é—Ç–µ–∫—Å —Å–æ–∑–¥–∞–Ω: {self.mutex_name}")
                return True

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º—å—é—Ç–µ–∫—Å–∞: {e}")
            return False

    def unlock(self):
        """–û—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –º—å—é—Ç–µ–∫—Å"""
        if self.mutex_handle:
            try:
                windll.kernel32.CloseHandle(self.mutex_handle)
                logger.debug(f"üîì –ú—å—é—Ç–µ–∫—Å –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω: {self.mutex_name}")
            except Exception as e:
                logger.debug(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–∏ –º—å—é—Ç–µ–∫—Å–∞: {e}")
            finally:
                self.mutex_handle = None
                self.locked = False


def get_single_instance():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–ª—è Windows"""
    return SingleInstance()