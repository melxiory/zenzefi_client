# utils/single_instance_file.py
import logging
import os
import sys
from pathlib import Path

logger = logging.getLogger(__name__)


class SingleInstance:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ñ–∞–π–ª–æ–≤—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
    """

    def __init__(self, lockfile_name="zenzefi_client.lock"):
        from core.config_manager import get_app_data_dir
        app_data_dir = get_app_data_dir()
        self.lockfile = app_data_dir / lockfile_name
        self.lockfile_handle = None
        self.locked = False

    def lock(self):
        """–ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª–æ–≤—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É"""
        try:
            # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            self.lockfile.parent.mkdir(parents=True, exist_ok=True)

            # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª –≤ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ
            try:
                self.lockfile_handle = os.open(
                    self.lockfile,
                    os.O_CREAT | os.O_EXCL | os.O_WRONLY
                )

                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º PID —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
                pid = str(os.getpid())
                os.write(self.lockfile_handle, pid.encode())
                os.close(self.lockfile_handle)
                self.lockfile_handle = None

                self.locked = True
                logger.info(f"‚úÖ –§–∞–π–ª–æ–≤–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {self.lockfile}")
                return True

            except FileExistsError:
                # –§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∂–∏–≤ –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
                if self._is_process_running():
                    logger.warning(f"‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ (—Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ {self.lockfile} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)")
                    return False
                else:
                    # –ü—Ä–æ—Ü–µ—Å—Å –º–µ—Ä—Ç–≤ - —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞
                    try:
                        self.lockfile.unlink()
                        logger.info("üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
                        return self.lock()  # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞
                    except:
                        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
                        return False

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {e}")
            return False

    def _is_process_running(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å, —Å–æ–∑–¥–∞–≤—à–∏–π —Ñ–∞–π–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏"""
        try:
            if self.lockfile.exists():
                with open(self.lockfile, 'r') as f:
                    pid_str = f.read().strip()
                    if pid_str.isdigit():
                        pid = int(pid_str)
                        import psutil
                        return psutil.pid_exists(pid)
        except:
            pass
        return False

    def unlock(self):
        """–û—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç —Ñ–∞–π–ª–æ–≤—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É"""
        if self.locked and self.lockfile.exists():
            try:
                self.lockfile.unlink()
                logger.debug(f"üîì –§–∞–π–ª–æ–≤–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —É–¥–∞–ª–µ–Ω–∞: {self.lockfile}")
            except Exception as e:
                logger.debug(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {e}")
            finally:
                self.locked = False


def get_single_instance():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º —Ñ–∞–π–ª–æ–≤–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏"""
    return SingleInstance()