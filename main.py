# main.py
import sys
import logging
from PySide6.QtWidgets import QApplication, QMessageBox
from ui.icons import get_icon_manager


def setup_logging():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –î–û –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π"""
    from core.config_manager import get_app_data_dir
    app_data_dir = get_app_data_dir()
    logs_dir = app_data_dir / "logs"
    logs_dir.mkdir(exist_ok=True)

    log_file = logs_dir / "zenzefi_client.log"

    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        handlers=[
            logging.StreamHandler(),
            logging.FileHandler(log_file, encoding='utf-8')
        ]
    )


# –ù–ê–°–¢–†–ê–ò–í–ê–ï–ú –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –°–ê–ú–´–ú –ü–ï–†–í–´–ú –î–ï–õ–û–ú
setup_logging()
logger = logging.getLogger(__name__)


def setup_exception_handler():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π"""

    def exception_handler(exc_type, exc_value, exc_traceback):
        if issubclass(exc_type, KeyboardInterrupt):
            sys.__excepthook__(exc_type, exc_value, exc_traceback)
            return

        logger.critical("–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:",
                        exc_info=(exc_type, exc_value, exc_traceback))

        try:
            app = QApplication.instance()
            if app:
                QMessageBox.critical(
                    None,
                    "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞",
                    f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:\n{exc_value}\n\n"
                    "–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ª–æ–≥-—Ñ–∞–π–ª–µ."
                )
        except:
            pass

    sys.excepthook = exception_handler


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
    from utils.single_instance import get_single_instance

    instance_lock = get_single_instance()

    if not instance_lock.lock():
        show_already_running_message()
        return 1

    app = None
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        app = QApplication(sys.argv)
        app.setApplicationName("Zenzefi Client")
        app.setApplicationVersion("1.0.0")
        app.setQuitOnLastWindowClosed(False)

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        setup_exception_handler()

        logger.info("üöÄ –ó–∞–ø—É—Å–∫ Zenzefi Client")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
        from core.proxy_manager import get_proxy_manager
        from core.certificate_manager import CertificateManager

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
        cert_manager = CertificateManager()
        if not cert_manager.ensure_certificates_exist():
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã")
            QMessageBox.critical(
                None,
                "–û—à–∏–±–∫–∞",
                "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç–æ."
            )
            instance_lock.unlock()
            return 1

        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–∫—Å–∏
        proxy_manager = get_proxy_manager()

        # –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –∏–ª–∏ —Ç—Ä–µ–π
        from core.config_manager import get_config
        config = get_config()
        start_minimized = config.get('application.start_minimized', False)

        main_window = None
        if not start_minimized:
            from ui.main_window import MainWindow
            main_window = MainWindow(proxy_manager)
            main_window.show()

        # –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫—É –≤ —Ç—Ä–µ–µ
        from ui.tray_icon import TrayIcon
        tray_icon = TrayIcon(app, proxy_manager)
        tray_icon.main_window = main_window
        tray_icon.show()

        logger.info("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        def cleanup():
            logger.info("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
            try:
                proxy_manager.stop()
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ–∫—Å–∏: {e}")

            # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            instance_lock.unlock()

        app.aboutToQuit.connect(cleanup)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
        return_code = app.exec()

        return return_code

    except Exception as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")

        # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø—Ä–∏ –æ—à–∏–±–∫–µ
        if instance_lock:
            instance_lock.unlock()

        if app:
            QMessageBox.critical(
                None,
                "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞",
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:\n{e}"
            )
        return 1


def show_already_running_message():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ"""
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        temp_app = QApplication([])
        icon_manager = get_icon_manager()
        temp_app.setWindowIcon(icon_manager.get_icon("window_img.png"))
        QMessageBox.information(
            None,
            "Zenzefi Client",
            "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ.\n\n"
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç—Ä–µ–π."
        )
        temp_app.quit()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    logger.info("‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ")


if __name__ == "__main__":
    sys.exit(main())