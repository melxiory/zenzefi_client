#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ConfigManager + NginxManager
"""

import logging
import time
from pathlib import Path
from core.config_manager import get_config
from core.nginx_manager import NginxManager

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

logger = logging.getLogger(__name__)


def test_config_manager():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ConfigManager"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ConfigManager")
    print("=" * 50)

    config = get_config()

    # 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"   –ü–æ—Ä—Ç: {config.get('proxy.local_port')}")
    print(f"   URL: {config.get('proxy.remote_url')}")
    print(f"   –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫: {config.get('application.auto_start')}")

    # 2. –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    print("\nüîç –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
    is_valid, message = config.validate_proxy_config()
    print(f"   {message}")


    # 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if config.save():
        print("   ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    else:
        print("   ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫")
        return False

    return True


def test_nginx_manager():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ NginxManager"""
    print("\nüöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ NginxManager")
    print("=" * 50)

    config = get_config()
    manager = NginxManager()

    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    local_port = config.get('proxy.local_port', 61000)
    remote_url = config.get('proxy.remote_url', 'https://zenzefi.melxiory.ru')

    print(f"üìç –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞:")
    print(f"   –õ–æ–∫–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç: {local_port}")
    print(f"   –£–¥–∞–ª–µ–Ω–Ω—ã–π URL: {remote_url}")

    # –ó–∞–ø—É—Å–∫–∞–µ–º nginx
    print(f"\nüîÑ –ó–∞–ø—É—Å–∫ nginx...")
    if manager.start(local_port, remote_url):
        print("‚úÖ Nginx —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        print(f"üåê –û—Ç–∫—Ä–æ–π—Ç–µ: https://127.0.0.1:{local_port}")

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        config.add_connection_history(True, "–£—Å–ø–µ—à–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫")

        # –ñ–¥–µ–º
        print("‚è≥ Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç 10 —Å–µ–∫—É–Ω–¥...")
        time.sleep(100)

        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
        print("\nüõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx...")
        manager.stop()

        return True
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å nginx")
        config.add_connection_history(False, "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ nginx")
        return False


def show_history():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π"""
    print("\nüìä –ò—Å—Ç–æ—Ä–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π:")
    print("=" * 50)

    config = get_config()
    history = config.get('history.connection_history', [])

    if not history:
        print("   –ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞")
        return

    for i, entry in enumerate(history[:5]):  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π
        from datetime import datetime
        timestamp = datetime.fromtimestamp(entry['timestamp']).strftime('%Y-%m-%d %H:%M:%S')
        status = "‚úÖ" if entry['success'] else "‚ùå"
        print(f"   {i + 1}. {timestamp} {status} {entry['message']}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ConfigManager + NginxManager")
    print("=" * 60)

    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º ConfigManager
        if not test_config_manager():
            return

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º NginxManager
        test_nginx_manager()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        show_history()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        config = get_config()
        config.set('application.last_test', time.time())
        config.save()

        print("\n" + "=" * 60)
        print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("üìÅ –ö–æ–Ω—Ñ–∏–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤:", get_config().config_path)

    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ Ctrl+C")
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx –µ—Å–ª–∏ –±—ã–ª –∑–∞–ø—É—â–µ–Ω
        manager = NginxManager()
        manager.stop()
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    main()